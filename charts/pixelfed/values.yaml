# Default values for pixelfed.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  registry: ghcr.io
  repository: mattlqx/docker-pixelfed
  # -- This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # -- Overrides the image tag whose default is the chart appVersion.
  tag: ""

# -- This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# -- This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Automatically mount a ServiceAccount's API credentials?
  automount: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# -- This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # -- This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # -- This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 80

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http

readinessProbe:
  httpGet:
    path: /
    port: http

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# -- Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# -- Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

pixelfed:
  # app specific settings
  app:
    # -- The name of your server/instance
    name: "Pixelfed"
    # -- The app environment, keep it set to "production"
    env: "production"
    # -- change this to the domain of your pixelfed instance
    url: "https://localhost"
    # -- change this to the language code of your pixelfed instance
    locale: "en"
    # -- The domain of your server, without https://
    domain: ""

  # -- Enable open registration for new accounts
  open_registration: true

  # -- Enforce email verification
  enforce_email_verification: true

  # -- The min password length
  min_password_length: 16

  # -- Enable account deletion (may be a requirement in some jurisdictions)
  account_deletion: true

  # -- Enable oAuth support, required for mobile/3rd party apps
  oauth_enabled: true

  # -- Enable the Stories feature
  stories_enabled: false

  # -- Enable the config cache to allow you to manage settings via the admin dashboard
  enable_config_cache: true

  # -- Set the image optimization quality, between 1-100. Lower uses less space, higher more quality
  image_quality: 80

  # -- The max allowed account size in KB
  max_account_size: 1000000

  # -- The max photo/video size in KB
  max_photo_size: 15000

  # -- The max user avatar size in KB
  max_avatar_size: 2000

  # -- The max post caption length
  max_caption_length: 1000

  # -- The max user bio length
  max_bio_length: 256

  # -- The max user display name length
  max_name_length: 32

  # -- The max number of media per post album
  max_album_length: 6

  # -- Force https url generation
  force_https_urls: true

  # your whole instance, or server, settings
  instance:
    # -- your server description
    description: "Pixelfed - Photo sharing for everyone"
    # -- enable the instance contact form
    contact_form: false
    # -- Enable public access to the Discover feature
    discover_public: false
    # -- Allow anonymous access to hashtag feeds
    public_hashtags: false
    # -- The public contact email for your server
    contact_email: ""
    # -- Enable the profile embed feature
    profile_embeds: true
    # -- Enable the post embed feature
    post_embeds: true
    # -- Enable Curated Registration
    cur_reg: false
    # -- Enable the api/v1/peers API endpoint
    show_peers: false

    reports:
      # -- Send a report email to the admin account for new autospam/reports
      email_enabled: false
      # -- A list of email addresses to deliver admin reports to
      email_addresses: []
      # -- Enable autospam reports (require INSTANCE_REPORTS_EMAIL_ENABLED)
      email_autospam: false

    landing:
      # -- Enable the profile directory on the landing page
      show_directory: true
      # -- Enable the popular post explore on the landing page
      show_explore: true

  # public feed settings
  pf:
    # -- Hide sensitive posts from public/network feeds
    hide_nsfw_on_public_feeds: false
    # -- Store local avatars on S3 (Requires S3)
    local_avatar_to_cloud: false
    # -- Enable the Admin Invites feature
    admin_invites_enabled: true
    # -- The max number of user blocks per account
    max_user_blocks: 50
    # -- The max number of user mutes per account
    max_user_mutes: 50
    # -- The max number of domain blocks per account
    max_domain_blocks: 50
    # -- Enable S3/Object Storage
    enable_cloud: false
    # -- Limit max user registrations
    max_users: 1000
    # -- in KB
    enforce_max_users: 2000
    # -- Enable image optimization
    optimize_images: true
    # -- Enable video optimization
    optimize_videos: true
    # -- Max collection post limit
    max_collection_length: 100
